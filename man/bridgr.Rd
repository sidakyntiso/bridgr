% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bridger.R
\name{bridgr}
\alias{bridgr}
\title{Implement bridging correction}
\usage{
bridgr(
  bridgr.dat,
  min_grade = NA,
  max_grade = NA,
  stan_model = NA,
  ITER = NA,
  WARMUP = NA,
  THIN = NA,
  CHAINS = NA,
  CORES = NA
)
}
\arguments{
\item{bridgr.dat}{A \code{bridgr.data} object.}

\item{min_grade}{The minimum possible grade (by default is zero.)}

\item{max_grade}{The maximum possible grade (by default is the
maximum observed grade.)}

\item{stan_model}{Rstan model (see manuscript for default implementation.)}

\item{ITER}{RSTAN parameter. A positive integer specifying the number of iterations for
each chain (including warmup). The default is 20000.}

\item{WARMUP}{= Rstan parameter. A positive integer specifying the number of warmup (aka burnin) iterations
per chain. The default is 1000.}

\item{THIN}{= A positive integer specifying the period for saving samples. The default is 1,}

\item{CHAINS}{Rstan parameter. A positive integer specifying the number of Markov chains.
The default is 4.}

\item{CORES}{Rstan parameter. The number of cores to use when executing the Markov chains
in parallel. The default is to use the value of the "mc.cores"}
}
\value{
\code{bridgr.dat} Processed version of the input dataset.

\code{coregradmeds} The post-processed (bridged) student
grades on the scale of the input dataset.

\code{zmedsrank} The post-processed (bridged) student ranks.

\code{student_id} Student identifier that can be linked with the input dataset.
}
\description{
Implements a Bayesian version of the Aldrich Mckelvey model to
grade data.
}
\examples{
data("bridgr.sim.data")
# Re-structure the input grading dataset.
bridgr.dat <- bridgr.data(df=bridgr.sim.data,student="student",
grader.assigned = "grader.assigned", grader="grader",grade="grade")
\donttest{
# Correct grading bias using bridging observations. Set cores = NA to utilize more CPU cores.
bridgr.sim.results = bridgr(bridgr.dat=bridgr.dat,min_grade=NA,max_grade=NA, CORES = 2)
}
}
